#!/usr/bin/env python

from __future__ import print_function

from rstweaver import rst_to_html, weaver_css

from argparse import ArgumentParser
import sys
import re

parser = ArgumentParser(
    description = 'Transform reST literate code to HTML'
)

parser.add_argument('source', metavar='SOURCE', type=str, nargs='*',
    help='reST source files')
parser.add_argument('--css', dest='css', action='store_true', default=True,
    help='Include <style> tags in the document')
parser.add_argument('--no-css', dest='css', action='store_false',
    help='Don\'t include <style> tags in the document')
parser.add_argument('-o', dest='outpath', type=str, default='',
    help='Specify output HTML file')
parser.add_argument('-f', '--fragment', dest='fragment', action='store_true', default=True,
    help='Don\'t include <html>, <body> etc (the default)')
parser.add_argument('-u', '--full', dest='fragment', action='store_false',
    help='Do include <html>, <body> etc (not the default)')
parser.add_argument('--print-css', dest='printcss', action='store_true', default=False,
    help='Print CSS and exit')

args = parser.parse_args()

def run(source):
    return rst_to_html(
        source, css=args.css,
        full = not args.fragment
    )

def open_output(path):
    if path == '-':
        return sys.stdout
    return open(path, 'w')

def print_to_outpath(inpath, content):
    if inpath == None:
        if args.outpath == '':
            sys.stdout.write(content)
        else:
            with open_output(args.outpath) as hl:
                hl.write(content)
    else:
        if args.outpath == '':
            outpath = re.sub(r'\.[^.]*', '.html', inpath)
        else:
            outpath = args.outpath
        
        with open_output(outpath) as hl:
            hl.write(content)
 
if args.printcss:
    print_to_outpath(None, weaver_css())
    sys.exit(0)

if len(args.source) == 0:
    source = sys.stdin.read()
    html = run(source)
    
    print_to_outpath(None, html)

for inpath in args.source:
    with open(inpath, 'r') as infile:
        source = infile.read()

    html = run(source)
    print_to_outpath(inpath, html)

